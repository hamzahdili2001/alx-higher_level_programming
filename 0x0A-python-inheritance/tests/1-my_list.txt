>>> MyList = __import__('1-my_list').MyList


>>> my_list = MyList()
>>> type(my_list)
<class '1-my_list.MyList'>


>>> print(my_list)
[]


>>> my_list = MyList([1, 2, 3])
>>> print(my_list)
[1, 2, 3]


>>> my_list = MyList(None)
Traceback (most recent call last):
TypeError: 'NoneType' object is not iterable


>>> my_list = MyList([3, 1], [3, 4])
Traceback (most recent call last):
TypeError: list expected at most 1 argument, got 2


>>> my_list = MyList()
>>> my_list.append(0)
>>> my_list.append(1)
>>> my_list.append(2)
>>> print(my_list)
[0, 1, 2]


>>> my_list[0] = 4
>>> print(my_list)
[4, 1, 2]


>>> my_list.remove(1)
>>> print(my_list)
[4, 2]


>>> my_list = MyList()
>>> print(my_list.print_sorted)
<bound method MyList.print_sorted of []>


>>> my_list.print_sorted(2)
Traceback (most recent call last):
TypeError: MyList.print_sorted() takes 1 positional argument but 2 were given


>>> my_list.append(1)
>>> my_list.append(2)
>>> my_list.append(3)
>>> my_list.append(4)
>>> my_list.append(5)
>>> print(my_list)
[1, 2, 3, 4, 5]


>>> my_list.print_sorted()
[1, 2, 3, 4, 5]


>>> print(my_list)
[1, 2, 3, 4, 5]


>>> my_list = MyList()
>>> my_list.append("Hamza")
>>> my_list.append("Mike")
>>> my_list.append("Julian")
>>> my_list.append("Duck")
>>> my_list.append("Betty")
>>> print(my_list)
['Hamza', 'Mike', 'Julian', 'Duck', 'Betty']


>>> my_list.print_sorted()
['Betty', 'Duck', 'Hamza', 'Julian', 'Mike']


>>> print(my_list)
['Hamza', 'Mike', 'Julian', 'Duck', 'Betty']


>>> my_list = MyList()
>>> my_list.print_sorted()
[]


>>> my_list = MyList([1, "Me", 2, "Betty"])
>>> my_list.print_sorted()
Traceback (most recent call last):
TypeError: '<' not supported between instances of 'str' and 'int'
